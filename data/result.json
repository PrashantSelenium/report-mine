{
  "report": {
    "summary": {
      "failed": 1,
      "error": 1,
      "duration": 124.0115430355072,
      "passed": 6,
      "num_tests": 8
    },
    "tests": [
      {
        "run_index": 4,
        "duration": 2.417464256286621,
        "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::MatchCompetitivePositioningAPITests::test_number_columns_in_responses_of_mypricegroup_matches",
        "outcome": "passed",
        "call": {
          "duration": 2.416774034500122,
          "name": "call",
          "outcome": "passed"
        },
        "teardown": {
          "duration": 8.797645568847656e-05,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 0.00030112266540527344,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 5,
        "duration": 2.0248000621795654,
        "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::MatchCompetitivePositioningAPITests::test_user_can_retrieve_details_of_mypricegroup_and_competitors",
        "outcome": "passed",
        "call": {
          "duration": 2.024209976196289,
          "name": "call",
          "outcome": "passed"
        },
        "teardown": {
          "duration": 8.177757263183594e-05,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 0.0002541542053222656,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 7,
        "duration": 2.110193967819214,
        "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_user_can_retrieve_sell_through_details",
        "outcome": "failed",
        "call": {
          "longrepr": "JD - self = <api.tests.sell_through_tests.test_sell_through_api.SellThroughAPITests testMethod=test_number_of_colums_retrieved_sell_through_details_is_37>\n\n    @pytest.mark.sell_through_api\n    @pytest.mark.smoke\n    def test_number_of_colums_retrieved_sell_through_details_is_37(self):\n        details = self.sell_through_client.get_sell_through_details_by_factID(self.planning_measure_id)\n        details_obj = details.object\n        self.assertEqual(len(details_obj.success.columns), 41, msg=ExceptionMessageGenerator.equality_exception(\n>               details, 41, len(details_obj.success.columns)))\nE       AssertionError: 43 != 41 : \nE       The Assertion has failed.\nE       *************************************************************************\nE       Expected: 41\nE       Actual: 43\nE       *****************************\nE       Request Details: \nE       *****************************\nE       URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/in/facts/93955/sellthrough/day\nE       Method: GET\nE       payload: None\nE       *****************************\nE       Response Details: \nE       *****************************\nE       Body: <api.price_api_clients.sell_through_client.models.response.SellThroughResponse object at 0x107b5cf60>\n\ntests/sell_through_tests/test_sell_through_api.py:32: AssertionError",
          "duration": 3.066580057144165,
          "name": "call",
          "outcome": "failed"
        },
        "teardown": {
          "duration": 0.0003299713134765625,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 0.00021600723266601562,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 6,
        "duration": 36.753559827804565,
        "name": "tests/sell_through_tests/test_sell_through_api.py::SellThroughAPITests::test_number_of_colums_retrieved_sell_through_details_is_37",
        "outcome": "failed",
        "call": {
          "longrepr": "self = <api.tests.sell_through_tests.test_sell_through_api.SellThroughAPITests testMethod=test_number_of_colums_retrieved_sell_through_details_is_37>\n\n    @pytest.mark.sell_through_api\n    @pytest.mark.smoke\n    def test_number_of_colums_retrieved_sell_through_details_is_37(self):\n        details = self.sell_through_client.get_sell_through_details_by_factID(self.planning_measure_id)\n        details_obj = details.object\n        self.assertEqual(len(details_obj.success.columns), 41, msg=ExceptionMessageGenerator.equality_exception(\n>               details, 41, len(details_obj.success.columns)))\nE       AssertionError: 43 != 41 : \nE       The Assertion has failed.\nE       *************************************************************************\nE       Expected: 41\nE       Actual: 43\nE       *****************************\nE       Request Details: \nE       *****************************\nE       URL: https://dev.periscope.mckinsey-solutions.com/tst2app2/price/price/api/in/facts/93955/sellthrough/day\nE       Method: GET\nE       payload: None\nE       *****************************\nE       Response Details: \nE       *****************************\nE       Body: <api.price_api_clients.sell_through_client.models.response.SellThroughResponse object at 0x107b5cf60>\n\ntests/sell_through_tests/test_sell_through_api.py:32: AssertionError",
          "duration": 3.066580057144165,
          "name": "call",
          "outcome": "failed"
        },
        "teardown": {
          "duration": 8.20159912109375e-05,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 16.843448877334595,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 1,
        "duration": 54.37540578842163,
        "name": "tests/events_api_tests/test_events_api.py::EventsAPITests::test_user_can_retrieve_event_details",
        "outcome": "passed",
        "call": {
          "duration": 1.0761289596557617,
          "name": "call",
          "outcome": "passed"
        },
        "teardown": {
          "duration": 0.00012683868408203125,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 26.649574995040894,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 0,
        "duration": 40.348422050476074,
        "name": "tests/event_price_volume_tests/test_preseason_force_price_volume_api.py::PriceVolumeAPITests::test_user_can_retrieve_price_volume_details",
        "outcome": "error",
        "teardown": {
          "duration": 0.00011205673217773438,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "longrepr": "cls = <class 'test_preseason_force_price_volume_api.PriceVolumeAPITests'>\n\n    @classmethod\n    def setUpClass(cls):\n        super(PriceVolumeAPITests, cls).setUpClass()\n        cls.planning_measure_id = cls.data_generator.fetch_planning_measure_id()[0]\n>       cls.event_end_day_key = cls.events_api_client.get_event_details_by_factID(cls.planning_measure_id).object.success.UpcomingEvent.eventEndDayKey\nE       AttributeError: 'NoneType' object has no attribute 'eventEndDayKey'\n\ntests/event_price_volume_tests/test_preseason_force_price_volume_api.py:14: AttributeError",
          "duration": 20.17415499687195,
          "name": "setup",
          "outcome": "error"
        }
      },
      {
        "run_index": 3,
        "duration": 57.39578580856323,
        "name": "tests/matchcompetitivepositioning_tests/test_matchcompetitivepositioning_api.py::MatchCompetitivePositioningAPITests::test_number_columns_in_responses_of_competitors_matches",
        "outcome": "passed",
        "call": {
          "duration": 1.3302171230316162,
          "name": "call",
          "outcome": "passed"
        },
        "teardown": {
          "duration": 8.702278137207031e-05,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 28.032740831375122,
          "name": "setup",
          "outcome": "passed"
        }
      },
      {
        "run_index": 2,
        "duration": 38.00556492805481,
        "name": "tests/force_breakup_tests/test_force_breakup_api.py::ForceBreakupAPITests::test_user_can_retrieve_force_breakup_details",
        "outcome": "passed",
        "call": {
          "duration": 1.849289894104004,
          "name": "call",
          "outcome": "passed"
        },
        "teardown": {
          "duration": 0.0001628398895263672,
          "name": "teardown",
          "outcome": "passed"
        },
        "setup": {
          "duration": 18.07805609703064,
          "name": "setup",
          "outcome": "passed"
        }
      }
    ],
    "created_at": "2017-01-23 14:39:25.233946",
    "environment": {
      "Platform": "Darwin-15.3.0-x86_64-i386-64bit",
      "Python": "3.5.2"
    }
  }
}